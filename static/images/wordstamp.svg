<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="140"
   height="65"
   viewBox="0 0 140 65"
   version="1.1"
   id="svg1"
   sodipodi:docname="wordstamp.svg"
   inkscape:version="1.3.2 (091e20e, 2023-11-25)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#cccccc"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="1"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:zoom="3.0458894"
     inkscape:cx="62.543308"
     inkscape:cy="16.579722"
     inkscape:window-width="1280"
     inkscape:window-height="772"
     inkscape:window-x="0"
     inkscape:window-y="1108"
     inkscape:window-maximized="0"
     inkscape:current-layer="svg1" />
  <defs
     id="defs1">
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath3">
      <path
         id="path3"
         style="fill:#ff0000;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.207439"
         d="m 302.63765,17.12213 v 7.69227 h 28.33167 v -7.69227 h -6.08016 c -0.0646,0.07795 -0.14484,0.15554 -0.24349,0.230533 -0.28384,0.215776 -0.56606,0.433723 -0.84394,0.657162 -0.93404,0.751058 -1.73202,-0.125153 -0.84718,-0.887695 z" />
    </clipPath>
  </defs>
  <g
     id="layer6"
     transform="matrix(3.5620837,0,0,3.5620837,-290.1176,-259.80239)">
    <g
       id="g4-0"
       transform="matrix(1.7989561,0,0,1.7989561,-468.81801,34.726311)"
       style="stroke:#ffffff;stroke-width:0.555878">
      <g
         id="g5-3"
         transform="matrix(0.70900764,0,0,0.70900764,92.18738,9.1249745)"
         style="stroke-width:0.784023">
        <path
           d="m 305.81845,17.330025 h 0.31185 l 3.1704,7.380246 h -0.38461 l -1.09144,-2.5467 h -3.70055 l -1.09144,2.5467 h -0.395 z m 1.89185,4.521706 -1.73592,-4.064336 -1.74632,4.064336 z m 4.68343,2.609072 c -0.0138,0.0072 -0.0693,0.03808 -0.16632,0.09355 -0.097,0.04849 -0.22175,0.09701 -0.37421,0.145522 -0.14552,0.04158 -0.31531,0.0624 -0.50934,0.0624 -0.18018,0 -0.34649,-0.03466 -0.49895,-0.103952 -0.15245,-0.06932 -0.27373,-0.169775 -0.36382,-0.30145 -0.0901,-0.138587 -0.13513,-0.301447 -0.13513,-0.48855 v -4.251419 h -0.76922 v -0.31184 h 0.76922 V 17.44437 h 0.35343 v 1.860662 h 1.27855 v 0.31184 h -1.27855 v 4.199462 c 0.0138,0.200959 0.0901,0.353413 0.22868,0.457367 0.13859,0.103952 0.29798,0.155918 0.47815,0.155918 0.22869,0 0.42273,-0.03808 0.58212,-0.114345 0.1663,-0.08314 0.2564,-0.131656 0.27026,-0.145512 z m 0.94591,0.249468 v -5.40524 h 0.35342 v 5.40524 z m 4.29304,-0.249468 c -0.0138,0.0072 -0.0693,0.03808 -0.16631,0.09355 -0.097,0.04849 -0.22175,0.09701 -0.37421,0.145522 -0.14552,0.04158 -0.31531,0.0624 -0.50935,0.0624 -0.18017,0 -0.34649,-0.03466 -0.49894,-0.103952 -0.15245,-0.06932 -0.27373,-0.169775 -0.36382,-0.30145 -0.0901,-0.138587 -0.13513,-0.301447 -0.13513,-0.48855 v -4.251419 h -0.76922 v -0.31184 h 0.76922 v -1.860663 h 0.35342 v 1.860663 h 1.27856 v 0.31184 h -1.27856 v 4.199462 c 0.0138,0.200958 0.0901,0.353412 0.22869,0.457367 0.13859,0.103952 0.29798,0.155917 0.47815,0.155917 0.22869,0 0.42273,-0.03808 0.58211,-0.114344 0.16631,-0.08314 0.25641,-0.131656 0.27026,-0.145512 z m 0.99789,-7.338672 h 0.36382 v 6.663016 c 0,0.221754 0.0554,0.388064 0.16632,0.498943 0.11781,0.103952 0.27026,0.155925 0.45736,0.155925 0.0901,0 0.19057,-0.01033 0.30145,-0.03116 0.11781,-0.02083 0.22176,-0.04507 0.31185,-0.07274 l 0.0832,0.291052 c -0.10395,0.03466 -0.23561,0.06582 -0.395,0.09355 -0.15245,0.02774 -0.28412,0.04158 -0.395,0.04158 -0.26333,0 -0.47816,-0.07968 -0.64447,-0.239076 -0.16632,-0.166318 -0.24948,-0.388065 -0.24948,-0.665258 z m 2.06855,6.039331 c 0,-0.318769 0.097,-0.592497 0.29105,-0.821178 0.19404,-0.235618 0.45737,-0.419258 0.79001,-0.550924 0.33263,-0.138588 0.7207,-0.207891 1.16422,-0.207891 0.29105,0 0.5925,0.02774 0.90434,0.08317 0.31184,0.04849 0.5925,0.117792 0.84198,0.207891 v -0.571709 c 0,-0.526663 -0.15593,-0.949387 -0.46777,-1.268156 -0.30492,-0.325703 -0.71724,-0.488545 -1.23698,-0.488545 -0.26333,0 -0.54399,0.05541 -0.84198,0.166308 -0.29105,0.110886 -0.58903,0.27373 -0.89394,0.488553 l -0.17672,-0.259864 c 0.35343,-0.242545 0.68953,-0.422716 1.0083,-0.540527 0.31877,-0.117818 0.62714,-0.176713 0.92513,-0.176713 0.62369,0 1.11917,0.190569 1.48645,0.57171 0.36728,0.374208 0.55092,0.883549 0.55092,1.528021 v 2.848148 c 0,0.07624 0.0138,0.13513 0.0416,0.176713 0.0347,0.03466 0.0831,0.05199 0.14552,0.05199 v 0.311848 h -0.12473 c -0.0277,0 -0.052,-0.0032 -0.0727,-0.01033 -0.097,-0.02083 -0.17324,-0.07274 -0.22868,-0.155928 -0.0554,-0.08314 -0.0866,-0.173242 -0.0935,-0.270262 V 23.80603 c -0.24948,0.318769 -0.57172,0.568243 -0.96672,0.748417 -0.39499,0.173247 -0.81772,0.259864 -1.26816,0.259864 -0.33263,0 -0.63408,-0.07274 -0.90434,-0.218289 -0.27026,-0.145514 -0.48509,-0.343023 -0.64447,-0.592491 -0.15246,-0.256406 -0.22869,-0.537068 -0.22869,-0.841974 z m 3.80449,0.467765 c 0.0624,-0.08315 0.10741,-0.162852 0.13513,-0.239076 0.0347,-0.08315 0.052,-0.155928 0.052,-0.218291 v -0.987501 c -0.27026,-0.103955 -0.55092,-0.180174 -0.84197,-0.228681 -0.28413,-0.05541 -0.57865,-0.08317 -0.88356,-0.08317 -0.57517,0 -1.03947,0.117818 -1.3929,0.353421 -0.35342,0.228688 -0.53013,0.533594 -0.53013,0.914734 0,0.249477 0.0624,0.478163 0.18711,0.686056 0.13167,0.207891 0.30837,0.374209 0.53013,0.498941 0.22869,0.124734 0.48162,0.187105 0.75882,0.187105 0.42965,0 0.82119,-0.07969 1.1746,-0.239076 0.36036,-0.166318 0.63062,-0.381143 0.8108,-0.644473 z m -1.38251,-5.550779 -0.24947,-0.135132 0.64447,-0.821187 h 0.46777 z m 7.84806,6.631823 h -0.35343 v -3.014457 c 0,-0.734564 -0.10741,-1.275087 -0.32223,-1.621576 -0.2079,-0.346491 -0.54053,-0.519739 -0.9979,-0.519739 -0.32571,0 -0.64448,0.07969 -0.95632,0.239077 -0.31184,0.152454 -0.58557,0.363818 -0.82119,0.634082 -0.22868,0.26333 -0.395,0.564778 -0.49894,0.904337 v 3.378276 h -0.35343 v -5.40524 h 0.34303 v 1.351306 c 0.14554,-0.284118 0.33957,-0.533594 0.58211,-0.748417 0.24947,-0.214825 0.52667,-0.38114 0.83158,-0.498943 0.30491,-0.124734 0.61676,-0.187103 0.93553,-0.187103 0.28412,0 0.52666,0.05199 0.72763,0.155918 0.2079,0.103954 0.37421,0.256408 0.49895,0.457367 0.13167,0.200969 0.22869,0.453901 0.29105,0.758815 0.0624,0.304908 0.0936,0.658328 0.0936,1.060256 z"
           id="text3-9"
           style="font-weight:200;font-size:6.61458px;line-height:1;font-family:Raleway;-inkscape-font-specification:'Raleway Ultra-Light';text-align:center;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#696969;fill-opacity:1;stroke:none;stroke-width:0.207439;stroke-linecap:round;stroke-linejoin:bevel;paint-order:stroke fill markers"
           aria-label="Atítlán"
           clip-path="url(#clipPath3)" />
        <path
           style="font-weight:100;font-size:3.79559px;line-height:1;font-family:Raleway;-inkscape-font-specification:'Raleway Thin';text-align:center;letter-spacing:0px;word-spacing:0px;text-anchor:middle;fill:#ff8c00;fill-opacity:1;stroke:none;stroke-width:0.207439;stroke-linecap:round;stroke-linejoin:bevel;stroke-opacity:1;paint-order:stroke fill markers"
           d="m 302.92944,27.880742 q 0,-0.381745 0.13122,-0.751557 0.13719,-0.375775 0.39367,-0.679975 0.25649,-0.310168 0.6263,-0.495069 0.36981,-0.184911 0.84699,-0.184911 0.56665,0 0.96032,0.262447 0.39368,0.256488 0.58455,0.662089 l -0.11334,0.03577 q -0.16104,-0.310162 -0.39963,-0.495071 -0.23859,-0.184904 -0.51297,-0.262448 -0.26841,-0.08351 -0.54279,-0.08351 -0.44139,0 -0.78734,0.172977 -0.34596,0.172979 -0.58455,0.465245 -0.23859,0.292274 -0.36385,0.650156 -0.11929,0.351919 -0.11929,0.721731 0,0.405601 0.14315,0.775415 0.14314,0.363845 0.39964,0.650151 0.25648,0.286307 0.59646,0.453324 0.33999,0.167009 0.73367,0.167009 0.28034,0 0.57261,-0.09543 0.29227,-0.09544 0.54876,-0.292276 0.25649,-0.196835 0.41754,-0.506998 l 0.11333,0.02981 q -0.14315,0.316124 -0.41753,0.536824 -0.27438,0.220691 -0.60841,0.334026 -0.32806,0.113335 -0.65015,0.113335 -0.42946,0 -0.79332,-0.184903 -0.35788,-0.190874 -0.62629,-0.501044 -0.26245,-0.316133 -0.4056,-0.703834 -0.14315,-0.393678 -0.14315,-0.793309 z m 5.61879,2.206946 q -0.30421,0 -0.57262,-0.125259 -0.26841,-0.125267 -0.47121,-0.345959 -0.2028,-0.226661 -0.31613,-0.512967 -0.11334,-0.292269 -0.11334,-0.614371 0,-0.328057 0.11334,-0.61436 0.11929,-0.292274 0.32209,-0.512966 0.2028,-0.226659 0.47122,-0.351918 0.26841,-0.125267 0.56665,-0.125267 0.29823,0 0.56665,0.125267 0.26841,0.125259 0.47121,0.351918 0.20281,0.220692 0.31613,0.512966 0.11929,0.286303 0.11929,0.61436 0,0.322102 -0.11333,0.614371 -0.11334,0.286306 -0.3221,0.512967 -0.20279,0.2207 -0.47121,0.345959 -0.26245,0.125259 -0.56665,0.125259 z m -1.354,-1.586616 q 0,0.399633 0.17894,0.73366 0.18491,0.334026 0.48911,0.536824 0.31017,0.196843 0.67998,0.196843 0.36982,0 0.67999,-0.202805 0.31016,-0.202798 0.49507,-0.542794 0.1849,-0.339989 0.1849,-0.739622 0,-0.399641 -0.1849,-0.733665 -0.18491,-0.339986 -0.49507,-0.54279 -0.30421,-0.202797 -0.67402,-0.202797 -0.36385,0 -0.67402,0.208767 -0.31016,0.202796 -0.49508,0.54279 -0.1849,0.339986 -0.1849,0.745589 z m 6.0065,1.526972 h -0.1193 v -1.723807 q 0,-0.674019 -0.19087,-0.984181 -0.1849,-0.31613 -0.60244,-0.31613 -0.29823,0 -0.58454,0.143145 -0.28034,0.137189 -0.48911,0.381744 -0.20876,0.238584 -0.29823,0.542784 v 1.956437 h -0.11929 v -3.095695 h 0.11929 v 0.79927 q 0.13122,-0.250516 0.34595,-0.441389 0.21473,-0.190863 0.47718,-0.298236 0.26842,-0.107365 0.54279,-0.107365 0.23859,0 0.41156,0.08947 0.17298,0.08351 0.28632,0.25648 0.11333,0.172977 0.16701,0.441386 0.0537,0.268412 0.0537,0.632263 z m 1.86696,0.05962 q -0.35192,0 -0.65016,-0.119289 -0.29824,-0.125267 -0.53085,-0.381747 l 0.0895,-0.07751 q 0.23859,0.232623 0.50104,0.345958 0.26245,0.113335 0.5905,0.113335 0.45929,0 0.74559,-0.196835 0.28631,-0.202806 0.28631,-0.554727 0,-0.226653 -0.12526,-0.35192 -0.12527,-0.131213 -0.36981,-0.20876 -0.23859,-0.08351 -0.58455,-0.161047 -0.31613,-0.07751 -0.53086,-0.149123 -0.20877,-0.07751 -0.31613,-0.208768 -0.10141,-0.13121 -0.10141,-0.375774 0,-0.31016 0.14912,-0.501034 0.15509,-0.190871 0.39964,-0.280341 0.25052,-0.09543 0.54279,-0.09543 0.37578,0 0.63822,0.131213 0.26842,0.125267 0.36982,0.31613 l -0.10737,0.0477 q -0.11333,-0.184909 -0.36981,-0.280341 -0.25648,-0.09543 -0.55472,-0.09543 -0.25649,0 -0.47122,0.07751 -0.21473,0.07751 -0.34595,0.238591 -0.13122,0.161047 -0.13122,0.423495 0,0.202797 0.0895,0.316132 0.0895,0.113333 0.27439,0.178939 0.1849,0.06558 0.47121,0.137191 0.36981,0.08351 0.63822,0.17298 0.26842,0.08946 0.41158,0.238585 0.14314,0.143154 0.14314,0.411574 0,0.405595 -0.31613,0.65015 -0.31613,0.238594 -0.83506,0.238594 z m 1.87293,-1.419607 v -1.735732 h 0.1193 v 1.735732 q 0,0.656121 0.21473,0.978216 0.22069,0.322102 0.66208,0.322102 0.29824,0 0.57261,-0.137191 0.27438,-0.137191 0.47718,-0.375785 0.20877,-0.244547 0.29824,-0.554718 v -1.968356 h 0.1193 v 2.857101 q 0,0.05366 0.0239,0.08947 0.0298,0.02981 0.0715,0.02981 v 0.119289 q -0.0358,0 -0.0537,0 -0.0179,-0.0064 -0.0298,-0.01192 -0.0596,-0.02385 -0.0954,-0.08351 -0.0358,-0.06558 -0.0358,-0.143153 v -0.548756 q -0.2028,0.387709 -0.56665,0.620333 -0.36385,0.226661 -0.78138,0.226661 -0.48911,0 -0.7456,-0.357882 -0.25051,-0.357883 -0.25051,-1.061724 z m 3.50728,-2.994284 h 0.11928 v 3.894961 q 0,0.17298 0.10737,0.274374 0.10736,0.101411 0.28631,0.101411 0.0656,0 0.15509,-0.01192 0.0954,-0.01789 0.17297,-0.04173 l 0.0417,0.09544 q -0.0775,0.02385 -0.2028,0.0477 -0.12526,0.02385 -0.20876,0.02385 -0.20877,0 -0.34,-0.131221 -0.13121,-0.137191 -0.13121,-0.357883 z m 2.5887,4.211094 q 0,0 -0.0775,0.0477 -0.0716,0.04174 -0.19684,0.08352 -0.12526,0.04173 -0.29227,0.04173 -0.14316,0 -0.26841,-0.05962 -0.11929,-0.05962 -0.19684,-0.167018 -0.0716,-0.107365 -0.0716,-0.250518 v -2.529044 h -0.44735 v -0.119289 h 0.44735 v -1.079642 h 0.11929 v 1.079611 h 0.7456 v 0.119289 h -0.7456 v 2.529044 q 0.0119,0.172979 0.13719,0.268412 0.12527,0.08947 0.28034,0.08947 0.20877,0 0.35192,-0.07154 0.14315,-0.07163 0.14913,-0.07751 z m 0.55472,0.143145 v -3.095694 h 0.11929 v 3.095694 z m 0,-3.894964 v -0.459283 h 0.11929 v 0.459283 z m 3.52516,3.894964 h -0.1193 v -1.723807 q 0,-0.674019 -0.19086,-0.984181 -0.18492,-0.31613 -0.60244,-0.31613 -0.29824,0 -0.58456,0.143145 -0.28033,0.137189 -0.4891,0.381745 -0.20877,0.238583 -0.29824,0.542783 v 1.956437 h -0.11929 V 26.93231 h 0.11929 v 0.799269 q 0.13122,-0.250516 0.34596,-0.441389 0.21473,-0.190863 0.47718,-0.298236 0.26841,-0.107365 0.54279,-0.107365 0.23859,0 0.41156,0.08947 0.17298,0.08351 0.28632,0.25648 0.11333,0.172977 0.16701,0.441386 0.0537,0.268412 0.0537,0.632263 z m 2.23081,0.05962 q -0.32209,0 -0.59648,-0.137191 -0.27437,-0.137191 -0.47718,-0.363844 -0.19683,-0.232632 -0.31016,-0.512968 -0.10736,-0.286314 -0.10736,-0.584545 0,-0.31017 0.10141,-0.596474 0.10736,-0.292274 0.29824,-0.518927 0.19086,-0.22666 0.45331,-0.357889 0.26841,-0.131213 0.58455,-0.131213 0.42349,0 0.73366,0.226654 0.31017,0.226659 0.53087,0.542792 v -0.721733 h 0.11928 v 3.226915 q 0,0.405603 -0.19683,0.674023 -0.19087,0.268412 -0.50701,0.393671 -0.31016,0.131221 -0.66208,0.131221 -0.54876,0 -0.85893,-0.208768 -0.31016,-0.202805 -0.48314,-0.530862 l 0.11334,-0.03577 q 0.19087,0.345951 0.51893,0.501036 0.33403,0.155093 0.70981,0.155093 0.33999,0 0.62033,-0.125267 0.28631,-0.119289 0.45332,-0.363853 0.17298,-0.238586 0.17298,-0.590506 v -0.775418 q -0.19684,0.31017 -0.53087,0.507006 -0.32805,0.196835 -0.67997,0.196835 z m 0,-0.119289 q 0.2207,0 0.42946,-0.08351 0.20877,-0.08351 0.38175,-0.2207 0.17298,-0.143161 0.28034,-0.310162 0.10737,-0.167017 0.11929,-0.334027 V 27.90454 q -0.0954,-0.262447 -0.29824,-0.465245 -0.19683,-0.202803 -0.44735,-0.31613 -0.25052,-0.119297 -0.51893,-0.119297 -0.31017,0 -0.56069,0.131221 -0.24456,0.131219 -0.41157,0.351919 -0.16701,0.214727 -0.25648,0.477177 -0.0895,0.262447 -0.0895,0.524897 0,0.292269 0.10142,0.560681 0.10736,0.26245 0.29823,0.471217 0.19087,0.208768 0.43542,0.328065 0.25052,0.119289 0.53683,0.119289 z"
           id="text20-9"
           aria-label="Consulting " />
      </g>
    </g>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
